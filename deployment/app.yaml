name: esg-scraper
region: nyc1

services:
  - name: api
    source_dir: /
    github:
      repo: hannah-ric/esg-scraper
      branch: main
      deploy_on_push: true
    
    # Use pre-built container image
    image:
      registry_type: DOCR
      registry: hannahricci
      repository: esg-scraper
      tag: image_tag_placeholder
    
    instance_count: 1
    instance_size_slug: basic-xxs
    
    routes:
      - path: /
    
    health_check:
      http_path: /health
      initial_delay_seconds: 60
      period_seconds: 10
      timeout_seconds: 5
      failure_threshold: 3
      success_threshold: 2
    
    run_command: /app/start_production.sh
    
    envs:
      - key: ENVIRONMENT
        value: production
        scope: RUN_TIME
      
      # APP URL (populated automatically by DigitalOcean)
      - key: APP_URL
        value: ${APP_URL}
        scope: RUN_TIME
      
      # SECURITY: Use GitHub Secrets for all sensitive values
      - key: JWT_SECRET
        value: ${JWT_SECRET}
        type: SECRET
        scope: RUN_TIME
      
      # MongoDB Configuration
      - key: MONGODB_URI
        value: ${MONGODB_URI}
        type: SECRET
        scope: RUN_TIME
      
      - key: MONGODB_DATABASE
        value: admin
        scope: RUN_TIME
      
      # Upstash Redis Configuration
      - key: UPSTASH_REDIS_URL
        value: ${UPSTASH_REDIS_URL}
        type: SECRET
        scope: RUN_TIME
      
      - key: UPSTASH_REDIS_REST_URL
        value: ${UPSTASH_REDIS_REST_URL}
        type: SECRET
        scope: RUN_TIME
      
      - key: UPSTASH_REDIS_REST_TOKEN
        value: ${UPSTASH_REDIS_REST_TOKEN}
        type: SECRET
        scope: RUN_TIME
      
      # API Configuration
      - key: FREE_TIER_CREDITS
        value: "100"
        scope: RUN_TIME
      
      - key: LOG_LEVEL
        value: INFO
        scope: RUN_TIME
      
      - key: WORKERS
        value: "1"
        scope: RUN_TIME
      
      # Stripe Configuration
      - key: STRIPE_SECRET_KEY
        value: ${STRIPE_SECRET_KEY}
        type: SECRET
        scope: RUN_TIME
      
      # AI API Keys (for future use)
      - key: OPENAI_KEY
        value: ${OPENAI_KEY}
        type: SECRET
        scope: RUN_TIME
      
      - key: ANTHROPIC_KEY
        value: ${ANTHROPIC_KEY}
        type: SECRET
        scope: RUN_TIME
      
      # Optional: Sentry error tracking
      - key: SENTRY_DSN
        value: ${SENTRY_DSN}
        type: SECRET
        scope: RUN_TIME
      
      # Security: Allowed CORS origins
      - key: CORS_ORIGINS
        value: "https://blueprintbuddy.io,https://www.blueprintbuddy.io"
        scope: RUN_TIME
      
      # MongoDB Connection Pool Settings
      - key: MONGODB_POOL_SIZE
        value: "50"
        scope: RUN_TIME
      
      - key: MONGODB_MIN_POOL_SIZE
        value: "5"
        scope: RUN_TIME

# Managed databases configuration
databases:
  # MongoDB is already provided - connection via MONGODB_URI
  # Using DigitalOcean Managed MongoDB:
  # - Automatic backups
  # - TLS encryption
  # - High availability
  
  # Optional: Add managed Redis for better reliability
  # - name: esg-redis
  #   engine: REDIS
  #   version: "7"
  #   size: db-s-1vcpu-1gb
  #   num_nodes: 1

# Domains - configure after deployment
domains:
  - domain: blueprintbuddy.io
    type: PRIMARY
    zone: blueprintbuddy.io
    minimum_tls_version: "1.3"
  
  - domain: www.blueprintbuddy.io
    type: ALIAS
    zone: blueprintbuddy.io
    minimum_tls_version: "1.3"

# Alerts - configure proper alerts after deployment
# Note: These alerts work at the service level
# alerts:
#   - rule: DEPLOYMENT_FAILED
#     disabled: false
#   
#   - rule: DEPLOYMENT_LIVE
#     disabled: false
#   
#   - rule: DOMAIN_FAILED
#     disabled: false 